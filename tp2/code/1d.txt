    JMP start       ; Salta al programa principal

dato:               ; Número a analizar
    DB 42
msgEven:            ; Mensaje si es par
    DB "Es par"
    DB 0
msgOdd:             ; Mensaje si es impar
    DB "Es impar"
    DB 0

start:              ; Programa principal
    MOV A, [dato]   ; Cargamos el número en el registro A
    MOV C, msgEven  ; Cargamos el mensaje "Es par"
    AND A, 0x01     ; Obtenemos el primer bit
    JZ print        ; Si es par, omitimos la siguiente instrucción
    MOV C, msgOdd   ; Si no lo es, cargamos el mensaje "Es impar"

print:              ; Imprimimos el mensaje
    MOV D, 0xE8     ; Cargamos la dirección del output
.loop:
    MOV A, [C]
    MOV [D], A      ; Movemos el caracter al output
    INC C           ; Incrementamos punteros
    INC D
    CMP A, 0        ; Verificamos si es el final
    JNZ .loop       ; Si no lo es, repetimos
    HLT